sum_values <- 0
for (num in x) { # could also have used while loop. but would have to start at i <= 1 because R doesn't start indices at 0, it starts at 1
num_values = num_values+1
sum_values = sum_values+num
}
mean <- sum_values/num_values
sum_deviations <- 0
for (num in x) {
deviation <- num-mean
squared_dev <- deviation^2
sum_deviations = sum_deviations+squared_dev
}
standard_dev <- sqrt(sum_deviations/num_values)
print(standard_dev)
standard_error <- standard_dev/sqrt(num_values)
print(standard_error)
}
nums <- c(1,2,3,4)
nums.answer <- calc.se(nums)
se_amp_sums <- calc.se(pseed.sum.max$amp.sum.mean)
calc.se <- function(x) {
as.numeric(x)
num_values <- 0
sum_values <- 0
for (num in x) { # could also have used while loop. but would have to start at i <= 1 because R doesn't start indices at 0, it starts at 1
num_values = num_values+1
sum_values = sum_values+num
}
mean <- sum_values/num_values
sum_deviations <- 0
for (num in x) {
deviation <- num-mean
squared_dev <- deviation^2
sum_deviations = sum_deviations+squared_dev
}
standard_dev <- sqrt(sum_deviations/num_values)
standard_error <- standard_dev/sqrt(num_values)
return(standard_error)
}
se_amp_sums <- calc.se(pseed.sum.max$amp.sum.mean)
pseed.sum.max <- pseed.sum.max%>%
mutate(amp.sum.se=se_amp_sums)
pseed.sum.max <- pseed.wide %>%
group_by(fish,speed)%>% # grouped by fish and speed
summarize(amp.sum.mean=mean(amp.sum)) %>%
print()
pseed.sum.max <- pseed.wide %>%
group_by(fish,speed)%>% # grouped by fish and speed
summarize(amp.sum.mean=mean(amp.sum)) %>%
print()
library(tidyverse)
library(features)
pseed <- read_csv("pseed.fin.amps.csv")
pseed.bl <- read_csv("pseed.lengths.csv")
speeds <- read_csv("pseed.calibration.csv")
# download data sets
# ***make sure these are in the coding-aRmy repo in github!!
#1 establish pseed.wide data tibble
pseed2 <- pseed%>%
left_join(speeds,by=c("speed"="vol"))%>%
# left_join() operation takes the speeds table and joins it leftward to the
# pseed table. creates a new dataframe of this combo. now we have m/s and cm/s columns
left_join(pseed.bl,by="fish")%>%
# joining pseed.bl to new tibble. now we have a new bl (in cm) column
mutate(bl.s=cm.s/bl)%>%
# add a new column with bl/s by dividing cm/s by bl (in cm)
print()
# in module, broke this into multiple steps. combined them with pipe
# creating a custom func:
find.peaks <- function(x,y,mult=100){ #define the functions parameter/inputs:x,y, and how much we want to multiple y by (remember the rounding issue)
f <- fget(features(x = x,y=y*mult))[2:3]%>% #store results in `f` and compute the features for the x-y relationship, wrap in in fget to retrieve the important features, subset the results to take the 2nd and 3rd items (the critical points and curvature)
as_tibble()%>% # putting data in a tibble
filter(curvature<0)%>% # filter that returns curvatures <0
mutate(peaks=round(crit.pts,0)) #adds a column that rounds the critical point to an integer that represents the frame
return(f$peaks) # return the peaks from tibble
}
pseed.max <- pseed2%>%
group_by(date,fin)%>%
mutate(peak=frame %in% find.peaks(frame,amp.bl))%>% # using the func we made
filter(peak==T) #new filter
# looking at all the data so just taking out the parts that are peaks to simplify it
pseed.wide <- pseed2 %>%
select(-amp)%>% # removed amp column so we just have amp.bl
pivot_wider(names_from = fin,values_from = amp.bl) %>% # adds 2 new columns. names of columns come from fin column, values for these columns come from amp.bl column. so fin and amp.bl columns are now gone
mutate(amp.sum=L+R)%>% # adding new amp.sum column
print()
#2 mean of max amp sums for each fish at each speed
pseed.sum.max <- pseed.wide %>%
group_by(fish,speed)%>% # grouped by fish and speed
summarize(amp.sum.mean=mean(amp.sum)) %>%
print()
pseed2 <- pseed%>%
left_join(speeds,by=c("speed"="vol"))%>%
# left_join() operation takes the speeds table and joins it leftward to the
# pseed table. creates a new dataframe of this combo. now we have m/s and cm/s columns
left_join(pseed.bl,by="fish")%>%
# joining pseed.bl to new tibble. now we have a new bl (in cm) column
mutate(bl.s=cm.s/bl)%>%
# add a new column with bl/s by dividing cm/s by bl (in cm)
print()
pseed2
View(pseed2)
# creating a custom func:
find.peaks <- function(x,y,mult=100){ #define the functions parameter/inputs:x,y, and how much we want to multiple y by (remember the rounding issue)
f <- fget(features(x = x,y=y*mult))[2:3]%>% #store results in `f` and compute the features for the x-y relationship, wrap in in fget to retrieve the important features, subset the results to take the 2nd and 3rd items (the critical points and curvature)
as_tibble()%>% # putting data in a tibble
filter(curvature<0)%>% # filter that returns curvatures <0
mutate(peaks=round(crit.pts,0)) #adds a column that rounds the critical point to an integer that represents the frame
return(f$peaks) # return the peaks from tibble
}
pseed.max <- pseed2%>%
group_by(date,fin)%>%
mutate(peak=frame %in% find.peaks(frame,amp.bl))%>% # using the func we made
filter(peak==T) #new filter
pseed.wide <- pseed2 %>%
select(-amp)%>% # removed amp column so we just have amp.bl
pivot_wider(names_from = fin,values_from = amp.bl) %>% # adds 2 new columns. names of columns come from fin column, values for these columns come from amp.bl column. so fin and amp.bl columns are now gone
mutate(amp.sum=L+R)%>% # adding new amp.sum column
print()
View(pseed.wide)
pseed.sum.max <- pseed.wide %>%
group_by(fish,bl.s)%>% # grouped by fish and speed
summarize(amp.sum.mean=mean(amp.sum)) %>%
print()
calc.se <- function(x) {
as.numeric(x)
standard_dev <- sd(x)
standard_error <- standard_dev/sqrt(length(x))
return(standard_error)
}
se_amp_sums <- calc.se(pseed.sum.max$amp.sum.mean)
pseed.sum.max <- pseed.sum.max%>%
group_by(fish,bl.s)%>%
summarize(amp.sum.se=se_amp_sums)
pseed.sum.max
se_amp_sums <- calc.se(amp.sum)
pseed.sum.max <- pseed.sum.max%>%
group_by(fish,bl.s)%>%
summarize(amp.sum.se=se_amp_sums)
pseed.sum.max
pseed.sum.max <- pseed.wide %>%
group_by(fish,bl.s)%>% # grouped by fish and speed
summarize(amp.sum.mean=mean(amp.sum)) %>%
print()
pseed.wide
pseed.sum.max <- pseed.sum.max%>%
group_by(fish,bl.s)%>%
summarize(amp.sum.se=calc.se(pseed.wide$amp.sum))
pseed.sum.ax
pseed.sum.max
pseed.sum.max <- pseed.wide %>%
group_by(fish,bl.s)%>% # grouped by fish and speed
summarize(amp.sum.mean=mean(amp.sum)) %>%
print()
pseed.sum.max
se_amp_sums <- calc.se(pseed.wide$amp.sum)
pseed.sum.max <- pseed.sum.max%>%
group_by(fish,bl.s)%>%
summarize(amp.sum.se=calc.se(pseed.wide$amp.sum))
pseed.sum.max <- pseed.sum.max%>%
group_by(fish,bl.s)%>%
summarize(amp.sum.se=calc.se(pseed.wide$amp.sum))
pseed.sum.max <- pseed.sum.max%>%
group_by(fish,bl.s)%>%
summarize(amp.sum.se=calc.se(pseed.wide$amp.sum))%>%
print()
nums <- c(1,2,3,4,5)
calc.se(nums)
sqrt(2)
sqrt(1.414214/5)
se_amp_sums <- calc.se(pseed.wide$amp.sum)
pseed.sum.max <- pseed.sum.max%>%
group_by(fish,bl.s)%>%
summarize(amp.sum.se=calc.se(se_amp_sums))%>%
print()
pseed.sum.max <- pseed.sum.max%>%
group_by(fish,bl.s)%>%
summarize(amp.sum.se=se_amp_sums)%>%
print()
pseed.sum.max %>%ggplot(aes(x=bl.s, y=amp.sum.mean, col = fish)) + geom_point(size=2) + geom_errorbar(aes(ymin=amp.sum.mean-amp.sum.se, ymax=amp.sum.mean+amp.sum.se), width = 0.05, size = 0.5)+geom_smooth(method="lm")+theme_classic()
pseed.wide <- pseed2 %>%
select(-amp)%>% # removed amp column so we just have amp.bl
pivot_wider(names_from = fin,values_from = amp.bl) %>% # adds 2 new columns. names of columns come from fin column, values for these columns come from amp.bl column. so fin and amp.bl columns are now gone
mutate(amp.sum=L+R)%>% # adding new amp.sum column
print()
pseed.sum.max <- pseed.wide %>%
group_by(fish,bl.s)%>% # grouped by fish and speed
summarize(amp.sum.mean=mean(amp.sum)) %>%
print()
pseed.sum.max <- pseed.sum.max%>%
group_by(fish,bl.s)%>%
summarize(amp.sum.se=se_amp_sums)%>%
print()
pseed.sum.max <- pseed.sum.max%>%
group_by(fish,bl.s)%>%
#summarize(amp.sum.se=se_amp_sums)%>%
print()
pseed.sum.max <- pseed.sum.max%>%
#group_by(fish,bl.s)%>%
summarize(amp.sum.se=se_amp_sums)%>%
print()
pseed.sum.se <- pseed.max%>%
group_by(fish,speed)%>%
summarize(amp.sum.se = calc.se(amp.sum))
# 1. Establish pseed.wide--------------------------------------------------
pseed2 <- pseed%>%
left_join(speeds,by=c("speed"="vol"))%>%
print()
pseed2 <- pseed2%>%
left_join(pseed.bl,by="fish")%>%
print()
pseed2 <- pseed2%>%
mutate(bl.s=cm.s/bl)%>%
print()
pseed.wide <- pseed2 %>%
select(-amp)%>%
pivot_wider(names_from = fin,values_from = amp.bl) %>%
mutate(amp.sum=L+R)%>%
print()
pseed.wide <- pseed2 %>%
select(-amp)%>% # removed amp column so we just have amp.bl
pivot_wider(names_from = fin,values_from = amp.bl) %>% # adds 2 new columns. names of columns come from fin column, values for these columns come from amp.bl column. so fin and amp.bl columns are now gone
mutate(amp.sum=L+R)%>% # adding new amp.sum column
print()
# 2. Compute mean maximum* of all the amp.sums ----------------------------
find.peaks <- function(x,y,mult=100){ #define the functions parameter/inputs:x,y, and how much we won't to multiple y by (remember the rounding issue)
f <- fget(features(x = x,y=y*mult))[2:3]%>% #store results in `f` and compute the features for the x-y relationship, wrap in in fget to retrieve the important features, subset the results to take the 2nd and 3rd and  items, the critical points and curvature, then pass it to a tibble
as_tibble()%>% # pass in through a filter that returns curvatures <0
filter(curvature<0)%>% #add a column that rounds the critical point to an integer that represents the frame
mutate(peaks=round(crit.pts,0))
return(f$peaks) # return the peaks from tibble
}
pseed.max <- pseed.wide%>%
group_by(fish,speed)%>%
mutate(peak=frame %in% find.peaks(frame,amp.sum))%>%
filter(peak==T) #new filter
pseed.max
pseed.sum.max<- pseed.max %>%
group_by(fish, speed) %>%
summarize(amp.sum.mean=mean(amp.sum))
pseed.sum.max
pseed.sum.max<- pseed.max %>%
group_by(fish, speed) %>%
summarize(amp.sum.mean=mean(amp.sum))
pseed.sum.max
# 3.  Custom function to compute standard error of the mean (SE) --------
SE <- function(x){
sd(x)/ sqrt(length(x))
}
pseed.sum.se <- pseed.max%>%
group_by(fish,speed)%>%
summarize(amp.sum.se = SE(amp.sum))
pseed.sum.se
# 1. Establish pseed.wide--------------------------------------------------
pseed2 <- pseed%>%
left_join(speeds,by=c("speed"="vol"))%>%
print()
pseed2 <- pseed2%>%
left_join(pseed.bl,by="fish")%>%
print()
pseed2 <- pseed2%>%
mutate(bl.s=cm.s/bl)%>%
print()
pseed.wide <- pseed2 %>%
select(-amp)%>%
pivot_wider(names_from = fin,values_from = amp.bl) %>%
mutate(amp.sum=L+R)%>%
print()
library(tidyverse)
library(features)
pseed <- read_csv("pseed.fin.amps.csv")
pseed.bl <- read_csv("pseed.lengths.csv")
speeds <- read_csv("pseed.calibration.csv")
# download data sets
# ***make sure these are in the coding-aRmy repo in github!!
#1 establish pseed.wide data tibble
pseed2 <- pseed%>%
left_join(speeds,by=c("speed"="vol"))%>%
# left_join() operation takes the speeds table and joins it leftward to the
# pseed table. creates a new dataframe of this combo. now we have m/s and cm/s columns
left_join(pseed.bl,by="fish")%>%
# joining pseed.bl to new tibble. now we have a new bl (in cm) column
mutate(bl.s=cm.s/bl)%>%
# add a new column with bl/s by dividing cm/s by bl (in cm)
print()
# in module, broke this into multiple steps. combined them with pipe
# creating a custom func:
find.peaks <- function(x,y,mult=100){ #define the functions parameter/inputs:x,y, and how much we want to multiple y by (remember the rounding issue)
f <- fget(features(x = x,y=y*mult))[2:3]%>% #store results in `f` and compute the features for the x-y relationship, wrap in in fget to retrieve the important features, subset the results to take the 2nd and 3rd items (the critical points and curvature)
as_tibble()%>% # putting data in a tibble
filter(curvature<0)%>% # filter that returns curvatures <0
mutate(peaks=round(crit.pts,0)) #adds a column that rounds the critical point to an integer that represents the frame
return(f$peaks) # return the peaks from tibble
}
pseed.max <- pseed2%>%
group_by(date,fin)%>%
mutate(peak=frame %in% find.peaks(frame,amp.bl))%>% # using the func we made
filter(peak==T) #new filter
# looking at all the data so just taking out the parts that are peaks to simplify it
pseed.wide <- pseed2 %>%
select(-amp)%>% # removed amp column so we just have amp.bl
pivot_wider(names_from = fin,values_from = amp.bl) %>% # adds 2 new columns. names of columns come from fin column, values for these columns come from amp.bl column. so fin and amp.bl columns are now gone
mutate(amp.sum=L+R)%>% # adding new amp.sum column
print()
pseed2 <- pseed%>%
left_join(speeds,by=c("speed"="vol"))%>%
# left_join() operation takes the speeds table and joins it leftward to the
# pseed table. creates a new dataframe of this combo. now we have m/s and cm/s columns
left_join(pseed.bl,by="fish")%>%
# joining pseed.bl to new tibble. now we have a new bl (in cm) column
mutate(bl.s=cm.s/bl)%>%
# add a new column with bl/s by dividing cm/s by bl (in cm)
select(-amp)%>% # removed amp column so we just have amp.bl
pivot_wider(names_from = fin,values_from = amp.bl) %>% # adds 2 new columns. names of columns come from fin column, values for these columns come from amp.bl column. so fin and amp.bl columns are now gone
mutate(amp.sum=L+R)%>% # adding new amp.sum column
print()
pseed.wide <- pseed%>%
left_join(speeds,by=c("speed"="vol"))%>%
# left_join() operation takes the speeds table and joins it leftward to the
# pseed table. creates a new dataframe of this combo. now we have m/s and cm/s columns
left_join(pseed.bl,by="fish")%>%
# joining pseed.bl to new tibble. now we have a new bl (in cm) column
mutate(bl.s=cm.s/bl)%>%
# add a new column with bl/s by dividing cm/s by bl (in cm)
select(-amp)%>% # removed amp column so we just have amp.bl
pivot_wider(names_from = fin,values_from = amp.bl) %>% # adds 2 new columns. names of columns come from fin column, values for these columns come from amp.bl column. so fin and amp.bl columns are now gone
mutate(amp.sum=L+R)%>% # adding new amp.sum column
print()
# 1. Establish pseed.wide--------------------------------------------------
pseed2 <- pseed%>%
left_join(speeds,by=c("speed"="vol"))%>%
print()
pseed2 <- pseed2%>%
left_join(pseed.bl,by="fish")%>%
print()
pseed2 <- pseed2%>%
mutate(bl.s=cm.s/bl)%>%
print()
pseed.wide <- pseed2 %>%
select(-amp)%>%
pivot_wider(names_from = fin,values_from = amp.bl) %>%
mutate(amp.sum=L+R)%>%
print()
pseed2 <- pseed%>%
left_join(speeds,by=c("speed"="vol"))%>%
# left_join() operation takes the speeds table and joins it leftward to the
# pseed table. creates a new dataframe of this combo. now we have m/s and cm/s columns
left_join(pseed.bl,by="fish")%>%
# joining pseed.bl to new tibble. now we have a new bl (in cm) column
mutate(bl.s=cm.s/bl)%>%
# add a new column with bl/s by dividing cm/s by bl (in cm)
print()
pseed.wide <- pseed2 %>%
select(-amp)%>% # removed amp column so we just have amp.bl
pivot_wider(names_from = fin,values_from = amp.bl) %>% # adds 2 new columns. names of columns come from fin column, values for these columns come from amp.bl column. so fin and amp.bl columns are now gone
mutate(amp.sum=L+R)%>% # adding new amp.sum column
print()
pseed.max <- pseed.wide%>%
group_by(date,fin)%>%
mutate(peak=frame %in% find.peaks(frame,amp.bl))%>% # using the func we made
filter(peak==T) #new filter
pseed.wide
pseed.max <- pseed.wide%>%
group_by(fish,bl.s)%>%
mutate(peak=frame %in% find.peaks(frame,amp.bl))%>% # using the func we made
filter(peak==T) #new filter
pseed.max <- pseed.wide%>%
group_by(fish,speed)%>%
mutate(peak=frame %in% find.peaks(frame,amp.bl))%>% # using the func we made
filter(peak==T) #new filter
pseed.sum.max<- pseed.max %>%
group_by(fish, speed) %>%
summarize(amp.sum.mean=mean(amp.sum))
pseed.sum.max<- pseed.max %>%
group_by(fish, speed) %>%
summarize(amp.sum.mean=mean(amp.sum))
pseed.max <- pseed.wide%>%
group_by(fish,speed)%>%
mutate(peak=frame %in% find.peaks(frame,amp.bl))%>% # using the func we made
filter(peak==T) #new filter
pseed.max <- pseed.wide%>%
group_by(fish,bl.s)%>%
mutate(peak=frame %in% find.peaks(frame,amp.bl))%>% # using the func we made
filter(peak==T) #new filter
pseed.wide
pseed.max <- pseed.wide%>%
group_by(fish,bl.s)%>%
mutate(peak=frame %in% find.peaks(frame,amp.sum))%>% # using the func we made
filter(peak==T) #new filter
pseed.max
pseed.sum.max <- pseed.max %>%
group_by(fish,bl.s)%>% # grouped by fish and speed
summarize(amp.sum.mean=mean(amp.sum)) %>%
print()
pseed.sum.max<- pseed.max %>%
group_by(fish, speed) %>%
summarize(amp.sum.mean=mean(amp.sum))
pseed.sum.max
pseed.sum.se <- pseed.max%>%
group_by(fish,speed)%>%
summarize(amp.sum.se = calc.se(amp.sum))
pseed.sum.max <- pseed.sum.max %>%
left_join(pseed.sum.se, by = c("speed","fish"))
pseed.sum.max
pseed.sum.se <- pseed.max%>%
group_by(fish,bl.s)%>%
summarize(amp.sum.se = calc.se(amp.sum))
pseed.sum.max <- pseed.sum.max %>%
left_join(pseed.sum.se, by = c("speed","fish"))
pseed.sum.se <- pseed.max%>%
group_by(fish,speed)%>%
summarize(amp.sum.se = calc.se(amp.sum))
pseed.sum.max <- pseed.sum.max %>%
left_join(pseed.sum.se, by = c("speed","fish"))
pseed.sum.max
pseed.sum.se <- pseed.max%>%
group_by(fish,speed)%>%
summarize(amp.sum.se = calc.se(amp.sum))
pseed.sum.max <- pseed.sum.max %>%
left_join(pseed.sum.se, by = c("speed","fish"))
pseed.sum.max
pseed.sum.se <- pseed.max%>%
group_by(fish,speed)%>%
summarize(amp.sum.se = calc.se(amp.sum))
pseed.sum.max <- pseed.sum.max %>%
left_join(pseed.sum.se, by = c("speed","fish"))
pseed.sum.max
pseed.sum.max %>%ggplot(aes(x=bl.s, y=amp.sum.mean, col = fish)) + geom_point(size=2) + geom_errorbar(aes(ymin=amp.sum.mean-amp.sum.se, ymax=amp.sum.mean+amp.sum.se), width = 0.05, size = 0.5)+geom_smooth(method="lm")+theme_classic()
pseed.sum.max %>%ggplot(aes(x=speed, y=amp.sum.mean, col = fish)) + geom_point(size=2) + geom_errorbar(aes(ymin=amp.sum.mean-amp.sum.se, ymax=amp.sum.mean+amp.sum.se), width = 0.05, size = 0.5)+geom_smooth(method="lm")+theme_classic()
pseed.sum.se <- pseed.max%>%
group_by(fish,speed)%>%
summarize(amp.sum.se = calc.se(amp.sum)) # new column based on standard errors of amp sums vs means
pseed.sum.max <- pseed.sum.max %>%
left_join(pseed.sum.se, by = c("speed","fish")) # adding column from other table to here
pseed.sum.max %>%ggplot(aes(x=speed, y=amp.sum.mean, col = fish)) + geom_point(size=2) + geom_errorbar(aes(ymin=amp.sum.mean-amp.sum.se, ymax=amp.sum.mean+amp.sum.se), width = 0.05, size = 0.5)+geom_smooth(method="lm")+theme_classic()
pseed.met.rate <- read_csv("pseed.met.rate.csv")
pseed.met.rate
View(pseed.sum.max)
View(pseed.met.rate)
pseed.sum.max %>%
left_join(pseed.met.rate)
View(pseed.sum.max)
pseed.max <- pseed.max%>%
merge(pseed.met.rate,by=c("fish","date","m.s","cm.s","bl.s"))
pseed.mean.rate <- pseed.max %>%
group_by(fish, speed)%>%
summarize(amp.met.rate=mean(met.rate))
pseed.sum.max <- pseed.sum.max %>%
left_join(pseed.mean.rate, by = c("speed","fish"))
pseed.sum.max
View(pseed.sum.max)
pseed.met.rate
pseed.sum.max %>%
ggplot(aes(x=amp.met.rate,y=amp.sum.mean,col=fish))+geom_point()+geom_smooth(method="lm")+geom_errorbar(aes(ymin=amp.sum.mean-amp.sum.se, ymax=amp.sum.mean+amp.sum.se), width=0.05, colour="black", position=pd)+theme_classic()
pseed.sum.max %>%
ggplot(aes(x=amp.met.rate,y=amp.sum.mean,col=fish))+geom_point()+geom_smooth(method="lm")+geom_errorbar(aes(ymin=amp.sum.mean-amp.sum.se, ymax=amp.sum.mean+amp.sum.se), width=0.05, colour="black")+theme_classic()
library(tidyverse)
library(features)
pseed <- read_csv("pseed.fin.amps.csv")
pseed.bl <- read_csv("pseed.lengths.csv")
speeds <- read_csv("pseed.calibration.csv")
pseed <- read_csv("pseed.fin.amps.csv")
pseed.bl <- read_csv("pseed.lengths.csv")
speeds <- read_csv("pseed.calibration.csv")
pseed2 <- pseed%>%
left_join(speeds,by=c("speed"="vol"))%>%
# left_join() operation takes the speeds table and joins it leftward to the
# pseed table. creates a new dataframe of this combo. now we have m/s and cm/s columns
left_join(pseed.bl,by="fish")%>%
# joining pseed.bl to new tibble. now we have a new bl (in cm) column
mutate(bl.s=cm.s/bl)%>%
# add a new column with bl/s by dividing cm/s by bl (in cm)
print()
View(pseed2)
pseed.wide <- pseed2 %>%
select(-amp)%>% # removed amp column so we just have amp.bl
pivot_wider(names_from = fin,values_from = amp.bl) %>% # adds 2 new columns. names of columns come from fin column, values for these columns come from amp.bl column. so fin and amp.bl columns are now gone
mutate(amp.sum=L+R)%>% # adding new amp.sum column
print()
# creating a custom func:
find.peaks <- function(x,y,mult=100){ #define the functions parameter/inputs:x,y, and how much we want to multiple y by (remember the rounding issue)
f <- fget(features(x = x,y=y*mult))[2:3]%>% #store results in `f` and compute the features for the x-y relationship, wrap in in fget to retrieve the important features, subset the results to take the 2nd and 3rd items (the critical points and curvature)
as_tibble()%>% # putting data in a tibble
filter(curvature<0)%>% # filter that returns curvatures <0
mutate(peaks=round(crit.pts,0)) #adds a column that rounds the critical point to an integer that represents the frame
return(f$peaks) # return the peaks from tibble
}
pseed.max <- pseed.wide%>%
group_by(fish,speed)%>%
mutate(peak=frame %in% find.peaks(frame,amp.sum))%>% # using the func we made
filter(peak==T) #new filter
pseed.sum.max <- pseed.max %>%
group_by(fish,speed)%>% # grouped by fish and speed
summarize(amp.sum.mean=mean(amp.sum)) %>%
print()
pseed.sum.se <- pseed.max%>%
group_by(fish,speed)%>%
summarize(amp.sum.se = calc.se(amp.sum)) # new column based on standard errors of amp sums vs means
pseed.sum.se
pseed.sum.max %>%
ggplot(aes(x=amp.met.rate,y=amp.sum.mean,col=fish))+geom_point()+geom_smooth(method="lm")+geom_errorbar(aes(ymin=amp.sum.mean-amp.sum.se, ymax=amp.sum.mean+amp.sum.se), width=0.05, colour="black")+theme_classic()
pseed.sum.max
pseed.met.rate <- read_csv("pseed.met.rate.csv")
pseed.max <- pseed.max%>%
merge(pseed.met.rate,by=c("fish","date","m.s","cm.s","bl.s"))
pseed.mean.rate <- pseed.max %>%
group_by(fish, speed)%>%
summarize(amp.met.rate=mean(met.rate))
pseed.sum.max <- pseed.sum.max %>%
left_join(pseed.mean.rate, by = c("speed","fish"))
pseed.sum.max %>%
ggplot(aes(x=amp.met.rate,y=amp.sum.mean,col=fish))+geom_point()+geom_smooth(method="lm")+geom_errorbar(aes(ymin=amp.sum.mean-amp.sum.se, ymax=amp.sum.mean+amp.sum.se), width=0.05, colour="black")+theme_classic()
